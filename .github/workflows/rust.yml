name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            arch: x86_64
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            platform: linux
            arch: x86
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            platform: linux
            arch: arm64
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            platform: windows
            arch: x86_64
          - os: windows-latest
            target: i686-pc-windows-gnu
            platform: windows
            arch: x86
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos
            arch: x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux x86 only)
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target=${{ matrix.target }}

      - name: Rename output binary
        run: |
          mkdir -p out/${{ matrix.platform }}/${{ matrix.arch }}
          BIN_NAME=commonkey_extractor_${{ matrix.platform }}_${{ matrix.arch }}
          # Windows binaries need .exe
          if [[ "${{ matrix.platform }}" == "windows" ]]; then
            BIN_NAME="${BIN_NAME}.exe"
          fi
          cp target/${{ matrix.target }}/release/YOUR_BINARY_NAME out/${{ matrix.platform }}/${{ matrix.arch }}/${BIN_NAME}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build_${{ matrix.platform }}_${{ matrix.arch }}
          path: out/${{ matrix.platform }}/${{ matrix.arch }}
